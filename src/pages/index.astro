---
import type { ImageMetadata } from "astro"
import { getCollection } from "astro:content"
import { Image } from "astro:assets"

import { snsLinks, sectionId } from "../data/site.ts"

import Layout from "../layouts/Layout.astro"
import Section from "@/layouts/Section.astro"
import { MenuNav } from "@/components/ui/MenuNav.tsx"

import instagramLogo from "../assets/logo/brandlogo-instagram.png"
import lineLogo from "../assets/logo/brandlogo-line.png"
import xLogo from "../assets/logo/brandlogo-x.png"

interface LogoMap {
  [key: string]: ImageMetadata
}

const logoMap: LogoMap = {
  Instagram: instagramLogo,
  X: xLogo,
  LINE: lineLogo,
}

// メニューセクションのデータ
const menuEntries = await getCollection("menu", ({ data }) => {
  return true
}).then((entries) => entries.sort((a, b) => a.data.order - b.data.order))

// 店舗案内セクションのデータ
const infoEntries = await getCollection("shopinfo", ({ data }) => {
  return true
}).then((entries) => entries.sort((a, b) => a.data.order - b.data.order))
---

<Layout>
  <main class="container mx-auto grid justify-center grid-cols-1">
    <Section id={sectionId.concept} title="コンセプト" isPaddingX={true}>
      <div>koxnseputo</div>
    </Section>
    <!-- メニュー -->
    <Section id={sectionId.menu.title} title="メニュー" isPaddingX={false}>
      <!-- メニューセクション用のナビバー -->
      <MenuNav client:load />

      <div id="menu-content" class="scroll-pt-52 mx-auto w-full h-auto">
        {
          menuEntries.map((entry) => {
            switch (entry.data._type) {
              //やきとん、一品料理
              case "foodList":
                return (
                  <div class="mb-10" id={entry.data.title}>
                    <h3 class="text-2xl md:text-3xl mb-5 pb-2.5 border-b-2 border-[#8e1919] font-['Kosugi_Maru',_sans-serif] text-[#8e1919]">
                      {entry.data.title}
                    </h3>
                    <div class="grid grid-cols-[auto-fill,minmax(250px,1fr)] gap-5">
                      {entry.data.items.map((item) => (
                        <div class="bg-primary/20 rounded-sm overflow-hidden shadow">
                          <div class="p-4">
                            <div class="text-lg font-bold mb-1">{item.name}</div>
                            <div class="text-gray-500">{item.description}</div>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                )
              //日本酒
              case "sakeList":
                return (
                  <div class="mb-10" id={entry.data.title}>
                    <h3 class="text-2xl md:text-3xl mb-5 pb-2.5 border-b-2 border-[#8e1919] font-['Kosugi_Maru',_sans-serif] text-[#8e1919]">
                      {entry.data.title}
                    </h3>
                    <div class="grid grid-cols-[auto-fill,minmax(250px,1fr)] gap-5">
                      {entry.data.items.map((item) => (
                        <div class="bg-primary/20 rounded-sm overflow-hidden shadow">
                          <div class="p-4">
                            <div class="text-lg font-bold mb-1">{item.brand}</div>
                            <div class="text-lg font-bold mb-1">{item.prefecture}</div>
                            <ul>
                              {item.items.map((item) => (
                                <li>
                                  <span>{item.name}</span>
                                  <span>{item.price}</span>
                                </li>
                              ))}
                            </ul>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                )
              //ドリンク
              case "drinkList":
                return (
                  <div class="mb-10" id={entry.data.title}>
                    <h3 class="text-2xl md:text-3xl mb-5 pb-2.5 border-b-2 border-[#8e1919] font-['Kosugi_Maru',_sans-serif] text-[#8e1919]">
                      {entry.data.title}
                    </h3>
                    <div class="grid grid-cols-[auto-fill,minmax(250px,1fr)] gap-5">
                      {entry.data.items.map((item) => (
                        <div class="bg-primary/20 rounded-sm overflow-hidden shadow">
                          <div class="text-lg font-bold mb-1">{item.category}</div>
                          <ul>
                            {item.items.map((item) => (
                              <li>
                                <span>{item.name}</span>
                                <span>{item.price}</span>
                              </li>
                            ))}
                          </ul>
                        </div>
                      ))}
                    </div>
                  </div>
                )
            }
          })
        }
      </div>
    </Section>

    <!-- SNSリンク -->
    <Section id={sectionId.sns} title="SNS" isPaddingX={true}>
      <div class="info-grid">
        {
          snsLinks.map((link) => {
            const logo = logoMap[link.name]

            return (
              <a
                href={link.url}
                class="sns-link"
                target="_blank"
                rel="noopener noreferrer"
                aria-label={link.ariaLabel}
              >
                <div class="sns-icon">
                  {logo && <Image src={logo} alt={link.ariaLabel} width={50} height={50} />}
                </div>
                <span class="sns-name">{link.name}</span>
              </a>
            )
          })
        }
      </div>
    </Section>

    <Section id={sectionId.shopInfo} title="営業のご案内" isPaddingX={true}>
      <div class="grid gap-2">
        {
          infoEntries.map((entry) => {
            switch (entry.data._type) {
              case "detailList":
                return (
                  <ul class="px-2 grid grid-cols-1 gap-2">
                    {entry.data.items.map((item) => (
                      <li>
                        <div class="font-bold text-lg">{item.label}：</div>
                        <div>{item.detail}</div>
                      </li>
                    ))}
                  </ul>
                )
              case "access":
                return (
                  <div class="grid grid-cols-[repeat(auto-fit,minmax(300px,1fr))] w-full h-auto">
                    <div class="p-7 bg-background round-sm shadow">
                      <h3 class="text-xl mb-3.5 border-b-2 pb-2">{entry.data.title}</h3>
                      <p>{entry.data.address}</p>
                      <p>{entry.data.stationInfo}</p>
                      <div class="mt-7 rounded-sm overflow-hidden h-80">
                        <iframe
                          src={entry.data.mapUrl}
                          class="w-full h-full aspect-square md:aspect-video"
                          style="border:0;"
                          allowfullscreen=""
                          loading="lazy"
                          referrerpolicy="no-referrer-when-downgrade"
                        />
                      </div>
                    </div>
                  </div>
                )
              default:
                console.warn("w")
                return null
            }
          })
        }
      </div>
    </Section>
  </main>
  <script is:inline>
    const menuContent = document.getElementById("menu-content")
    const menuContentHeight = menuContent.offsetHeight
    menuContent.style.height = `${menuContentHeight}px`
  </script>
</Layout>
